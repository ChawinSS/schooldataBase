{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red7\green19\blue34;\red7\green19\blue34;
\red235\green235\blue242;\red245\green245\blue251;\red25\green190\blue45;\red23\green23\blue23;\red202\green202\blue202;
\red17\green136\blue207;\red212\green212\blue212;\red209\green51\blue120;\red205\green94\blue6;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c1961\c9804\c17647\c94902;\cssrgb\c1961\c9804\c17647;
\cssrgb\c93725\c93725\c96078;\cssrgb\c96863\c96863\c98824;\cssrgb\c0\c77255\c23137;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c0\c60784\c84706;\cssrgb\c86275\c86275\c86275;\cssrgb\c86275\c30196\c54510;\cssrgb\c84706\c45098\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
That's right! This table probably uses an OLTP approach because it is updated and holds data from the past week.\
-3 option\
\'97\'97\'97\
\pard\pardeftab720\sa105\partightenfactor0

\fs42 \AppleTypeServices\AppleTypeServicesF65539 \cf4 \cb2 Recommend a storage solution\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 When should you choose a data warehouse over a data lake?\
-4 option\
\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Deciding fact and dimension tables\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Imagine that you love running and data. It's only natural that you begin collecting data on your weekly running routine. You're most concerned with tracking how long you are running each week. You also record the route and the distances of your runs. You gather this data and put it into one table called 
\fs24 \cf4 \cb5 Runs
\fs28 \cf4 \cb2  with the following schema:\cf4 \cb1 \

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat2 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth9040\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf4 \clbrdrr\brdrnil \clpadt200 \clpadl200 \clpadb200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf4 \cb2 runs\cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat2 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth9040\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt200 \clpadl200 \clpadb200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf4 \cb2 duration_mins - float\cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat2 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat6 \clwWidth9040\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt200 \clpadl200 \clpadb200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf4 \cb2 week - int\cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat2 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth9040\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt200 \clpadl200 \clpadb200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf4 \cb2 month - varchar(160)\cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat2 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat6 \clwWidth9040\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt200 \clpadl200 \clpadb200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf4 \cb2 year - int\cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat2 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth9040\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt200 \clpadl200 \clpadb200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf4 \cb2 park_name - varchar(160)\cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat2 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat6 \clwWidth9040\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt200 \clpadl200 \clpadb200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf4 \cb2 city_name - varchar(160)\cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat2 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth9040\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt200 \clpadl200 \clpadb200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf4 \cb2 distance_km - float\cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat2 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat6 \clwWidth9040\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt200 \clpadl200 \clpadb200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf4 \cb2 route_name - varchar(160)\cb1 \cell \lastrow\row
\pard\pardeftab720\sa280\partightenfactor0
\cf4 \cb2 After learning about dimensional modeling, you decide to restructure the schema for the database. 
\fs24 \cf4 \cb5 Runs
\fs28 \cf4 \cb2  has been pre-loaded for you.\
- 2 option\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Create a dimension table called 
\fs24 \cb5 route
\fs28 \cb2  that will hold the route information.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls1\ilvl0\cf4 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Create a dimension table called 
\fs24 \cb5 week
\fs28 \cb2  that will hold the week information.\
\pard\pardeftab720\partightenfactor0
\ls2\ilvl0
\f1\fs32 \cf7 \cb8 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 -- Create a route dimension table\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf10 \strokec10 route\cf9 \strokec9  \cf11 \strokec11 (\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf2 \strokec2 route_id\cf9 \strokec9  \cf10 \strokec10 INTEGER\cf9 \strokec9  \cf10 \strokec10 PRIMARY\cf9 \strokec9  \cf10 \strokec10 KEY\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf2 \strokec2 park_name\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \strokec12 160\cf11 \strokec11 )\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf2 \strokec2 city_name\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \strokec12 160\cf11 \strokec11 )\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf2 \strokec2 distance_km\cf9 \strokec9  \cf10 \strokec10 FLOAT\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf2 \strokec2 route_name\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \strokec12 160\cf11 \strokec11 )\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cf11 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 );\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 -- Create a week dimension table\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf10 \strokec10 week\cf11 \strokec11 (\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf2 \strokec2 week_id\cf9 \strokec9  \cf10 \strokec10 INTEGER\cf9 \strokec9  \cf10 \strokec10 PRIMARY\cf9 \strokec9  \cf10 \strokec10 KEY\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf10 \strokec10 week\cf9 \strokec9  \cf10 \strokec10 INTEGER\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf10 \strokec10 month\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \strokec12 160\cf11 \strokec11 )\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf10 \strokec10 year\cf9 \strokec9  \cf10 \strokec10 INTEGER\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf9 \cb1 \strokec9 \
\ls2\ilvl0\cf11 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 );\cf9 \cb1 \strokec9 \
\pard\tx566\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\f2\b\fs40 \cf4 Querying the dimensional model\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b0\fs28 \cf4 \cb2 Here it is! The schema reorganized using the dimensional model:\
\pard\pardeftab720\sa160\partightenfactor0
\cf4 Calculate the sum of the 
\fs24 \cb5 duration_mins
\fs28 \cb2  column.\cf4 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf10 \cb8 \outl0\strokewidth0 \strokec10 SELECT\cf9 \strokec9  \cb1 \
\cb8     \cf7 \strokec7 -- Get the total duration of all runs\cf9 \cb1 \strokec9 \
\cb8     \cf13 \strokec13 SUM\cf11 \strokec11 (\cf2 \strokec2 duration_mins\cf11 \strokec11 )\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 FROM\cf9 \strokec9  \cb1 \
\cb8     \cf2 \strokec2 runs_fact\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls3\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Join 
\fs24 \cb5 week_dim
\fs28 \cb2  and 
\fs24 \cb5 runs_fact
\fs28 \cb2 .\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls3\ilvl0\cf4 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Get all the 
\fs24 \cb5 week_id
\fs28 \cb2 's from July, 2019.\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf10 \cb8 \outl0\strokewidth0 \strokec10 SELECT\cf9 \strokec9  \cb1 \
\cb8     \cf7 \strokec7 -- Get the total duration of all runs\cf9 \cb1 \strokec9 \
\cb8     \cf13 \strokec13 SUM\cf11 \strokec11 (\cf2 \strokec2 duration_mins\cf11 \strokec11 )\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 FROM\cf9 \strokec9  \cb1 \
\cb8     \cf2 \strokec2 runs_fact\cf9 \cb1 \strokec9 \
\cf7 \cb8 \strokec7 -- Get all the week_id's that are from July, 2019\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 INNER\cf9 \strokec9  \cf10 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 week_dim\cf9 \strokec9  \cf10 \strokec10 ON\cf9 \strokec9  \cf2 \strokec2 week_dim\cf11 \strokec11 .\cf2 \strokec2 week_id\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf2 \strokec2 runs_fact\cf11 \strokec11 .\cf2 \strokec2 week_id\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 WHERE\cf9 \strokec9  \cf10 \strokec10 month\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf12 \cb8 \strokec12 'July'\cf9 \cb8 \strokec9  \cf10 \strokec10 and\cf9 \strokec9  \cf10 \strokec10 year\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf12 \cb8 \strokec12 '2019'\cf11 \cb8 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\tx566\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Running from star to snowflake\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Remember your running database from last chapter?\
- 2option\
\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Adding foreign keys\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Foreign key references are essential to both the snowflake and star schema. When creating either of these schemas, correctly setting up the foreign keys is vital because they connect dimensions to the fact table. They also enforce a one-to-many relationship, because unless otherwise specified, a foreign key can appear more than once in a table and primary key can appear only once.\cf4 \cb1 \
\cf4 \cb2 The 
\fs24 \cf4 \cb5 fact_booksales
\fs28 \cf4 \cb2  table has three foreign keys: 
\fs24 \cf4 \cb5 book_id
\fs28 \cf4 \cb2 , 
\fs24 \cf4 \cb5 time_id
\fs28 \cf4 \cb2 , and 
\fs24 \cf4 \cb5 store_id
\fs28 \cf4 \cb2 . In this exercise, the four tables that make up the star schema below have been loaded. However, the foreign keys still need to be added.\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Add the book_id foreign key\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb8 \strokec10 ALTER\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 fact_booksales\cf9 \strokec9  \cf10 \strokec10 ADD\cf9 \strokec9  \cf10 \strokec10 CONSTRAINT\cf9 \strokec9  \cf2 \strokec2 sales_book\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb8     \cf10 \strokec10 FOREIGN\cf9 \strokec9  \cf10 \strokec10 KEY\cf9 \strokec9  \cf11 \strokec11 (\cf2 \strokec2 book_id\cf11 \strokec11 )\cf9 \strokec9  \cf10 \strokec10 REFERENCES\cf9 \strokec9  \cf2 \strokec2 dim_book_star\cf9 \strokec9  \cf11 \strokec11 (\cf2 \strokec2 book_id\cf11 \strokec11 );\cf9 \cb1 \strokec9 \
\cb8     \cb1 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb8 \strokec7 -- Add the time_id foreign key\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb8 \strokec10 ALTER\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 fact_booksales\cf9 \strokec9  \cf10 \strokec10 ADD\cf9 \strokec9  \cf10 \strokec10 CONSTRAINT\cf9 \strokec9  \cf2 \strokec2 sales_time\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb8    \cf10 \strokec10 FOREIGN\cf9 \strokec9  \cf10 \strokec10 KEY\cf9 \strokec9  \cf11 \strokec11 (\cf2 \strokec2 time_id\cf11 \strokec11 )\cf9 \strokec9  \cf10 \strokec10 REFERENCES\cf9 \strokec9  \cf2 \strokec2 dim_time_star\cf9 \strokec9  \cf11 \strokec11 (\cf2 \strokec2 time_id\cf11 \strokec11 );\cf9 \cb1 \strokec9 \
\cb8     \cb1 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb8 \strokec7 -- Add the store_id foreign key\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb8 \strokec10 ALTER\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 fact_booksales\cf9 \strokec9  \cf10 \strokec10 ADD\cf9 \strokec9  \cf10 \strokec10 CONSTRAINT\cf9 \strokec9  \cf2 \strokec2 sales_store\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb8    \cf10 \strokec10 FOREIGN\cf9 \strokec9  \cf10 \strokec10 KEY\cf9 \strokec9  \cf11 \strokec11 (\cf2 \strokec2 store_id\cf11 \strokec11 )\cf9 \strokec9  \cf10 \strokec10 REFERENCES\cf9 \strokec9  \cf2 \strokec2 dim_store_star\cf9 \strokec9  \cf11 \strokec11 (\cf2 \strokec2 store_id\cf11 \strokec11 );\cf9 \cb1 \strokec9 \
\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\f0\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 \cb2 \outl0\strokewidth0 Extending the book dimension\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 In the video, we saw how the book dimension differed between the star and snowflake schema. The star schema's dimension table for books, 
\fs24 \cf4 \cb5 dim_book_star
\fs28 \cf4 \cb2 , has been loaded and below is the snowflake schema of the book dimension.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls4\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Create 
\fs24 \cb5 dim_author
\fs28 \cb2  with a column for 
\fs24 \cb5 author
\fs28 \cb2 .\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls4\ilvl0\cf4 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Insert all the distinct authors from 
\fs24 \cb5 dim_book_star
\fs28 \cb2  into 
\fs24 \cb5 dim_author
\fs28 \cb2 .\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls4\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}
\f1\fs32 \cf7 \cb8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 -- Create a new table for dim_author with an author column\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\ls4\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 dim_author\cf9 \strokec9  \cf11 \strokec11 (\cf9 \cb1 \strokec9 \
\ls4\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf2 \strokec2 author\cf9 \strokec9  \cf10 \strokec10 varchar\cf11 \strokec11 (\cf12 \cb8 \strokec12 256\cf11 \cb8 \strokec11 )\cf9 \strokec9   \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf9 \cb1 \strokec9 \
\ls4\ilvl0\cf11 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 );\cf9 \cb1 \strokec9 \
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9 \
\ls4\ilvl0\cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 -- Insert distinct authors \cf9 \cb1 \strokec9 \
\ls4\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 INSERT\cf9 \strokec9  \cf10 \strokec10 INTO\cf9 \strokec9  \cf2 \strokec2 dim_author\cf9 \cb1 \strokec9 \
\ls4\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 DISTINCT\cf9 \strokec9  \cf2 \strokec2 author\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 dim_book_star\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\tx566\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls5\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Alter 
\fs24 \cb5 dim_author
\fs28 \cb2  to have a primary key called 
\fs24 \cb5 author_id
\fs28 \cb2 .\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls5\ilvl0\cf4 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Output all the columns of 
\fs24 \cb5 dim_author
\fs28 \cb2 .\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a new table for dim_author with an author column\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 dim_author\cf9 \strokec9  \cf11 \strokec11 (\cf9 \cb1 \strokec9 \
\cb8     \cf2 \strokec2 author\cf9 \strokec9  \cf10 \strokec10 varchar\cf11 \strokec11 (\cf12 \cb8 \strokec12 256\cf11 \cb8 \strokec11 )\cf9 \strokec9   \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf9 \cb1 \strokec9 \
\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Insert authors \cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 INSERT\cf9 \strokec9  \cf10 \strokec10 INTO\cf9 \strokec9  \cf2 \strokec2 dim_author\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 DISTINCT\cf9 \strokec9  \cf2 \strokec2 author\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 dim_book_star\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Add a primary key \cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 ALTER\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 dim_author\cf9 \strokec9  \cf10 \strokec10 ADD\cf9 \strokec9  \cf10 \strokec10 COLUMN\cf9 \strokec9  \cf2 \strokec2 author_id\cf9 \strokec9  \cf2 \strokec2 SERIAL\cf9 \strokec9  \cf10 \strokec10 PRIMARY\cf9 \strokec9  \cf10 \strokec10 KEY\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Output the new table\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 *\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 dim_author\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\tx566\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Querying the star schema\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 The novel genre hasn't been selling as well as your company predicted. To help remedy this, you've been tasked to run some analytics on the novel genre to find which areas the Sales team should target. To begin, you want to look at the total amount of sales made in each state from books in the novel genre.\cf4 \cb1 \
\cf4 \cb2 Luckily, you've just finished setting up a data warehouse with the following star schema:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls6\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Select 
\fs24 \cb5 state
\fs28 \cb2  from the appropriate table and the total 
\fs24 \cb5 sales_amount
\fs28 \cb2 .\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls6\ilvl0\cf4 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Complete the JOIN on 
\fs24 \cb5 book_id
\fs28 \cb2 .\cb1 \
\ls6\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Complete the JOIN to connect the 
\fs24 \cb5 dim_store_star
\fs28 \cb2  table\cb1 \
\ls6\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Conditionally select for books with the 
\fs24 \cb5 genre
\fs28 \cb2  
\fs24 \cb5 novel
\fs28 \cb2 .\cb1 \
\ls6\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Group the results by state.\
\pard\tx566\pardeftab720\sa160\partightenfactor0
\cf4 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Output each state and their total sales_amount\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf2 \strokec2 dim_store_star\cf11 \strokec11 .\cf10 \strokec10 state\cf11 \strokec11 ,\cf9 \strokec9  \cf13 \strokec13 SUM\cf11 \strokec11 (\cf2 \strokec2 sales_amount\cf11 \strokec11 )\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 fact_booksales\cf9 \cb1 \strokec9 \
\cb8     \cf7 \strokec7 -- Join to get book information\cf9 \cb1 \strokec9 \
\cb8     \cf10 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 dim_book_star\cf9 \strokec9  \cf10 \strokec10 on\cf9 \strokec9  \cf2 \strokec2 fact_booksales\cf11 \strokec11 .\cf2 \strokec2 book_id\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf2 \strokec2 dim_book_star\cf11 \strokec11 .\cf2 \strokec2 book_id\cf9 \cb1 \strokec9 \
\cb8     \cf7 \strokec7 -- Join to get store information\cf9 \cb1 \strokec9 \
\cb8     \cf10 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 dim_store_star\cf9 \strokec9  \cf10 \strokec10 on\cf9 \strokec9  \cf2 \strokec2 fact_booksales\cf11 \strokec11 .\cf2 \strokec2 store_id\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf2 \strokec2 dim_store_star\cf11 \strokec11 .\cf2 \strokec2 store_id\cf9 \cb1 \strokec9 \
\cf7 \cb8 \strokec7 -- Get all books with in the novel genre\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 WHERE\cf9 \strokec9   \cb1 \
\cb8     \cf2 \strokec2 dim_book_star\cf11 \strokec11 .\cf2 \strokec2 genre\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf12 \cb8 \strokec12 'novel'\cf9 \cb1 \strokec9 \
\cf7 \cb8 \strokec7 -- Group results by state\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 GROUP\cf9 \strokec9  \cf10 \strokec10 BY\cf9 \cb1 \strokec9 \
\cb8     \cf2 \strokec2 dim_store_star\cf11 \strokec11 .\cf10 \strokec10 state\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\tx566\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \'97\'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Querying the snowflake schema\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Imagine that you didn't have the data warehouse set up. Instead, you'll have to run this query on the company's operational database, which means you'll have to rewrite the previous query with the following snowflake schema:\cf4 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls7\ilvl0\cf4 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Select 
\fs24 \cb5 state
\fs28 \cb2  from the appropriate table and the total 
\fs24 \cb5 sales_amount
\fs28 \cb2 .\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls7\ilvl0\cf4 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Complete the two JOINS to get the 
\fs24 \cb5 genre_id
\fs28 \cb2 's.\cb1 \
\ls7\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Complete the three JOINS to get the 
\fs24 \cb5 state_id
\fs28 \cb2 's.\cb1 \
\ls7\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Conditionally select for books with the 
\fs24 \cb5 genre
\fs28 \cb2  
\fs24 \cb5 novel
\fs28 \cb2 .\cb1 \
\ls7\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Group the results by state.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls7\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}
\f1\fs32 \cf7 \cb8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 -- Output each state and their total sales_amount\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\ls7\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 SELECT\cf9 \strokec9  \cf2 \strokec2 dim_state_sf\cf11 \strokec11 .\cf10 \strokec10 state\cf11 \strokec11 ,\cf9 \strokec9  \cf13 \cb8 \strokec13 sum\cf11 \cb8 \strokec11 (\cf2 \strokec2 sales_amount\cf11 \strokec11 )\cf9 \cb1 \strokec9 \
\ls7\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 fact_booksales\cf9 \cb1 \strokec9 \
\ls7\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf7 \strokec7 -- Joins for the genre\cf9 \cb1 \strokec9 \
\ls7\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf10 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 dim_book_sf\cf9 \strokec9  \cf10 \strokec10 on\cf9 \strokec9  \cf2 \strokec2 fact_booksales\cf11 \strokec11 .\cf2 \strokec2 book_id\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf2 \strokec2 dim_book_sf\cf11 \strokec11 .\cf2 \strokec2 book_id\cf9 \cb1 \strokec9 \
\ls7\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf10 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 dim_genre_sf\cf9 \strokec9  \cf10 \strokec10 on\cf9 \strokec9  \cf2 \strokec2 dim_book_sf\cf11 \strokec11 .\cf2 \strokec2 genre_id\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf2 \strokec2 dim_genre_sf\cf11 \strokec11 .\cf2 \strokec2 genre_id\cf9 \cb1 \strokec9 \
\ls7\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf7 \strokec7 -- Joins for the state \cf9 \cb1 \strokec9 \
\ls7\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf10 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 dim_store_sf\cf9 \strokec9  \cf10 \strokec10 on\cf9 \strokec9  \cf2 \strokec2 fact_booksales\cf11 \strokec11 .\cf2 \strokec2 store_id\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf2 \strokec2 dim_store_sf\cf11 \strokec11 .\cf2 \strokec2 store_id\cf9 \strokec9  \cb1 \
\ls7\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf10 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 dim_city_sf\cf9 \strokec9  \cf10 \strokec10 on\cf9 \strokec9  \cf2 \strokec2 dim_store_sf\cf11 \strokec11 .\cf2 \strokec2 city_id\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf2 \strokec2 dim_city_sf\cf11 \strokec11 .\cf2 \strokec2 city_id\cf9 \cb1 \strokec9 \
\ls7\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf10 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 dim_state_sf\cf9 \strokec9  \cf10 \strokec10 on\cf9 \strokec9   \cf2 \strokec2 dim_city_sf\cf11 \strokec11 .\cf2 \strokec2 state_id\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf2 \strokec2 dim_state_sf\cf11 \strokec11 .\cf2 \strokec2 state_id\cf9 \cb1 \strokec9 \
\ls7\ilvl0\cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 -- Get all books with in the novel genre and group the results by state\cf9 \cb1 \strokec9 \
\ls7\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 WHERE\cf9 \strokec9   \cb1 \
\ls7\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf2 \strokec2 dim_genre_sf\cf11 \strokec11 .\cf2 \strokec2 genre\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf12 \cb8 \strokec12 'novel'\cf9 \cb1 \strokec9 \
\ls7\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 GROUP\cf9 \strokec9  \cf10 \strokec10 BY\cf9 \cb1 \strokec9 \
\ls7\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9    \cf2 \strokec2 dim_state_sf\cf11 \strokec11 .\cf10 \strokec10 state\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\tx566\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \'97\'97\'97\'97\'97\'97\
\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Updating countries\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Going through the company data, you notice there are some inconsistencies in the store addresses. These probably occurred during data entry, where people fill in fields using different naming conventions. This can be especially seen in the 
\fs24 \cf4 \cb5 country
\fs28 \cf4 \cb2  field, and you decide that countries should be represented by their abbreviations. The only countries in the database are Canada and the United States, which should be represented as 
\fs24 \cf4 \cb5 USA
\fs28 \cf4 \cb2  and 
\fs24 \cf4 \cb5 CA
\fs28 \cf4 \cb2 .\cf4 \cb1 \
\cf4 \cb2 In this exercise, you will compare the records that need to be updated in order to do this task on the star and snowflake schema. 
\fs24 \cf4 \cb5 dim_store_star
\fs28 \cf4 \cb2  and 
\fs24 \cf4 \cb5 dim_country_sf
\fs28 \cf4 \cb2  have been loaded.\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Output records that need to be updated in the star schema\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 *\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 dim_store_star\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 WHERE\cf9 \strokec9  \cf2 \strokec2 country\cf9 \strokec9  \cf10 \strokec10 !=\cf9 \strokec9  \cf12 \cb8 \strokec12 'USA'\cf9 \cb8 \strokec9  \cf10 \strokec10 AND\cf9 \strokec9  \cf2 \strokec2 country\cf9 \strokec9  \cf10 \strokec10 !=\cf12 \cb8 \strokec12 'CA'\cf11 \cb8 \strokec11 ;\cf9 \cb1 \strokec9 \
\
-3 option\
\
\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\f0\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 \cb2 \outl0\strokewidth0 Extending the snowflake schema\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 The company is thinking about extending their business beyond bookstores in Canada and the US. Particularly, they want to expand to a new continent. In preparation, you decide a 
\fs24 \cf4 \cb5 continent
\fs28 \cf4 \cb2  field is needed when storing the addresses of stores.\cf4 \cb1 \
\cf4 \cb2 Luckily, you have a snowflake schema in this scenario. As we discussed in the video, the snowflake schema is typically faster to extend while ensuring data consistency. Along with 
\fs24 \cf4 \cb5 dim_country_sf
\fs28 \cf4 \cb2 , a table called 
\fs24 \cf4 \cb5 dim_continent_sf
\fs28 \cf4 \cb2  has been loaded. It contains the only continent currently needed, 
\fs24 \cf4 \cb5 North America
\fs28 \cf4 \cb2 , and a primary key. In this exercise, you'll need to extend 
\fs24 \cf4 \cb5 dim_country_sf
\fs28 \cf4 \cb2  to reference 
\fs24 \cf4 \cb5 dim_continent_sf
\fs28 \cf4 \cb2 .\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Add a continent_id column with default value of 1\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb8 \strokec10 ALTER\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 dim_country_sf\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 ADD\cf9 \strokec9  \cf2 \strokec2 continent_id\cf9 \strokec9  \cf10 \strokec10 int\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf9 \strokec9  \cf10 \strokec10 DEFAULT\cf11 \strokec11 (\cf12 \cb8 \strokec12 1\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb8 \strokec7 -- Add the foreign key constraint\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb8 \strokec10 ALTER\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 dim_country_sf\cf9 \strokec9  \cf10 \strokec10 ADD\cf9 \strokec9  \cf10 \strokec10 CONSTRAINT\cf9 \strokec9  \cf2 \strokec2 country_continent\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb8    \cf10 \strokec10 FOREIGN\cf9 \strokec9  \cf10 \strokec10 KEY\cf9 \strokec9  \cf11 \strokec11 (\cf2 \strokec2 continent_id\cf11 \strokec11 )\cf9 \strokec9  \cf10 \strokec10 REFERENCES\cf9 \strokec9  \cf2 \strokec2 dim_continent_sf\cf11 \strokec11 (\cf2 \strokec2 continent_id\cf11 \strokec11 );\cf9 \cb1 \strokec9 \
\cb8    \cb1 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb8 \strokec7 -- Output updated table\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 *\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 dim_country_sf\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\f0\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 \cb2 \outl0\strokewidth0 Converting to 1NF\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 In the next three exercises, you'll be working through different tables belonging to a car rental company. Your job is to explore different schemas and gradually increase the normalization of these schemas through the different normal forms. At this stage, we're not worried about relocating the data, but rearranging the tables.\cf4 \cb1 \
\cf4 \cb2 A table called 
\fs24 \cf4 \cb5 customers
\fs28 \cf4 \cb2  has been loaded, which holds information about customers and the cars they have rented.\
-2 option\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls8\ilvl0
\fs24 \cf4 \cb5 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
cars_rented
\fs28 \cb2  holds one or more 
\fs24 \cb5 car_id
\fs28 \cb2 s and 
\fs24 \cb5 invoice_id
\fs28 \cb2  holds multiple values. Create a new table to hold individual 
\fs24 \cb5 car_id
\fs28 \cb2 s and 
\fs24 \cb5 invoice_id
\fs28 \cb2 s of the 
\fs24 \cb5 customer_id
\fs28 \cb2 s who've rented those cars.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls8\ilvl0\cf4 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Drop two columns from customers table to satisfy 1NF\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a new table to hold the cars rented by customers\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 cust_rentals\cf9 \strokec9  \cf11 \strokec11 (\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 customer_id\cf9 \strokec9  \cf10 \strokec10 INT\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 car_id\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \cb8 \strokec12 128\cf11 \cb8 \strokec11 )\cf9 \strokec9  \cf10 \strokec10 NULL\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 invoice_id\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \cb8 \strokec12 128\cf11 \cb8 \strokec11 )\cf9 \strokec9  \cf10 \strokec10 NULL\cf9 \cb1 \strokec9 \
\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Drop a column from customers table to satisfy 1NF\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 ALTER\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 customers\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 DROP\cf9 \strokec9  \cf10 \strokec10 COLUMN\cf9 \strokec9  \cf2 \strokec2 cars_rented\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 DROP\cf9 \strokec9  \cf10 \strokec10 COLUMN\cf9 \strokec9  \cf2 \strokec2 invoice_id\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\
\pard\tx566\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Converting to 2NF\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Let's try normalizing a bit more. In the last exercise, you created a table holding 
\fs24 \cf4 \cb5 customer_id
\fs28 \cf4 \cb2 s and 
\fs24 \cf4 \cb5 car_id
\fs28 \cf4 \cb2 s. This has been expanded upon and the resulting table, 
\fs24 \cf4 \cb5 customer_rentals
\fs28 \cf4 \cb2 , has been loaded for you. Since you've got 1NF down, it's time for 2NF.\
-3 option\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a new table to satisfy 2NF\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 cars\cf9 \strokec9  \cf11 \strokec11 (\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 car_id\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \cb8 \strokec12 256\cf11 \cb8 \strokec11 )\cf9 \strokec9  \cf10 \strokec10 NULL\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 model\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \cb8 \strokec12 128\cf11 \cb8 \strokec11 ),\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 manufacturer\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \cb8 \strokec12 128\cf11 \cb8 \strokec11 ),\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 type_car\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \cb8 \strokec12 128\cf11 \cb8 \strokec11 ),\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 condition\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \cb8 \strokec12 128\cf11 \cb8 \strokec11 ),\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 color\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \cb8 \strokec12 128\cf11 \cb8 \strokec11 )\cf9 \cb1 \strokec9 \
\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Drop columns in customer_rentals to satisfy 2NF\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 ALTER\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 customer_rentals\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 DROP\cf9 \strokec9  \cf10 \strokec10 COLUMN\cf9 \strokec9  \cf2 \strokec2 model\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 DROP\cf9 \strokec9  \cf10 \strokec10 COLUMN\cf9 \strokec9  \cf2 \strokec2 manufacturer\cf11 \strokec11 ,\cf9 \strokec9  \cb1 \
\cf10 \cb8 \strokec10 DROP\cf9 \strokec9  \cf10 \strokec10 COLUMN\cf9 \strokec9  \cf2 \strokec2 type_car\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 DROP\cf9 \strokec9  \cf10 \strokec10 COLUMN\cf9 \strokec9  \cf2 \strokec2 condition\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 DROP\cf9 \strokec9  \cf10 \strokec10 COLUMN\cf9 \strokec9  \cf2 \strokec2 color\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Converting to 3NF\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Last, but not least, we are at 3NF. In the last exercise, you created a table holding 
\fs24 \cf4 \cb5 car_ids
\fs28 \cf4 \cb2 s and car attributes. This has been expanded upon. For example, 
\fs24 \cf4 \cb5 car_id
\fs28 \cf4 \cb2  is now a primary key. The resulting table, 
\fs24 \cf4 \cb5 rental_cars
\fs28 \cf4 \cb2 , has been loaded for you.\
-1 option\
\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a new table to satisfy 3NF\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 car_model\cf11 \strokec11 (\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 model\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \cb8 \strokec12 128\cf11 \cb8 \strokec11 ),\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 manufacturer\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \cb8 \strokec12 128\cf11 \cb8 \strokec11 ),\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 type_car\cf9 \strokec9  \cf10 \strokec10 VARCHAR\cf11 \strokec11 (\cf12 \cb8 \strokec12 128\cf11 \cb8 \strokec11 )\cf9 \cb1 \strokec9 \
\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Drop columns in rental_cars to satisfy 3NF\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 ALTER\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 rental_cars\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 DROP\cf9 \strokec9  \cf10 \strokec10 COLUMN\cf9 \strokec9  \cf2 \strokec2 manufacturer\cf11 \strokec11 ,\cf9 \strokec9  \cb1 \
\cf10 \cb8 \strokec10 DROP\cf9 \strokec9  \cf10 \strokec10 COLUMN\cf9 \strokec9  \cf2 \strokec2 type_car\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Viewing views\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Because views are very useful, it's common to end up with many of them in your database. It's important to keep track of them so that database users know what is available to them.\cf4 \cb1 \
\cf4 \cb2 The goal of this exercise is to get familiar with viewing views within a database and interpreting their purpose. This is a skill needed when writing database documentation or organizing views.\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Get all non-systems views\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 *\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 information_schema\cf11 \strokec11 .\cf10 \strokec10 views\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 WHERE\cf9 \strokec9  \cf2 \strokec2 table_schema\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 IN\cf9 \strokec9  \cf11 \strokec11 (\cf12 \cb8 \strokec12 'pg_catalog'\cf11 \cb8 \strokec11 ,\cf9 \strokec9  \cf12 \cb8 \strokec12 'information_schema'\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
-2 option\
-3 option\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Creating and querying a view\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Have you ever found yourself running the same query over and over again? Maybe, you used to keep a text copy of the query in your desktop notes app, but that was all before you knew about views!\cf4 \cb1 \
\cf4 \cb2 In these Pitchfork reviews, we're particularly interested in high-scoring reviews and if there's a common thread between the works that get high scores. In this exercise, you'll make a view to help with this analysis so that we don't have to type out the same query often to get these high-scoring reviews.\
\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a view for reviews with a score above 9\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 VIEW\cf9 \strokec9  \cf2 \strokec2 high_scores\cf9 \strokec9  \cf10 \strokec10 AS\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 *\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 REVIEWS\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 WHERE\cf9 \strokec9  \cf2 \strokec2 score\cf9 \strokec9  \cf10 \strokec10 >\cf9 \strokec9  \cf12 \cb8 \strokec12 9\cf11 \cb8 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\pard\pardeftab720\sa160\partightenfactor0
\cf4 Count the number of records in 
\fs24 \cb5 high_scores
\fs28 \cb2  that are 
\fs24 \cb5 self-released
\fs28 \cb2  in the 
\fs24 \cb5 label
\fs28 \cb2  field of the 
\fs24 \cb5 labels
\fs28 \cb2  table.\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a view for reviews with a score above 9\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 VIEW\cf9 \strokec9  \cf2 \strokec2 high_scores\cf9 \strokec9  \cf10 \strokec10 AS\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 *\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 REVIEWS\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 WHERE\cf9 \strokec9  \cf2 \strokec2 score\cf9 \strokec9  \cf10 \strokec10 >\cf9 \strokec9  \cf12 \cb8 \strokec12 9\cf11 \cb8 \strokec11 ;\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Count the number of self-released works in high_scores\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf13 \strokec13 COUNT\cf11 \strokec11 (\cf10 \strokec10 *\cf11 \strokec11 )\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 high_scores\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 INNER\cf9 \strokec9  \cf10 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 labels\cf9 \strokec9  \cf10 \strokec10 ON\cf9 \strokec9  \cf2 \strokec2 high_scores\cf11 \strokec11 .\cf2 \strokec2 reviewid\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf2 \strokec2 labels\cf11 \strokec11 .\cf2 \strokec2 reviewid\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 WHERE\cf9 \strokec9  \cf2 \strokec2 label\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf12 \cb8 \strokec12 'self-released'\cf11 \cb8 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Creating a view from other views\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Views can be created from queries that include other views. This is useful when you have a complex schema, potentially due to normalization, because it helps reduce the 
\fs24 \cf4 \cb5 JOINS
\fs28 \cf4 \cb2  needed. The biggest concern is keeping track of dependencies, specifically how any modifying or dropping of a view may affect other views.\cf4 \cb1 \
\cf4 \cb2 In the next few exercises, we'll continue using the Pitchfork reviews data. There are two views of interest in this exercise. 
\fs24 \cf4 \cb5 top_15_2017
\fs28 \cf4 \cb2  holds the top 15 highest scored reviews published in 2017 with columns 
\fs24 \cf4 \cb5 reviewid
\fs28 \cf4 \cb2 ,
\fs24 \cf4 \cb5 title
\fs28 \cf4 \cb2 , and 
\fs24 \cf4 \cb5 score
\fs28 \cf4 \cb2 . 
\fs24 \cf4 \cb5 artist_title
\fs28 \cf4 \cb2  returns a list of all reviewed titles and their respective artists with columns 
\fs24 \cf4 \cb5 reviewid
\fs28 \cf4 \cb2 , 
\fs24 \cf4 \cb5 title
\fs28 \cf4 \cb2 , and 
\fs24 \cf4 \cb5 artist
\fs28 \cf4 \cb2 . From these views, we want to create a new view that gets the highest scoring artists of 2017.\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a view with the top artists in 2017\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 VIEW\cf9 \strokec9  \cf2 \strokec2 top_artists_2017\cf9 \strokec9  \cf10 \strokec10 AS\cf9 \cb1 \strokec9 \
\cf7 \cb8 \strokec7 -- with only one column holding the artist field\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf2 \strokec2 artist_title\cf11 \strokec11 .\cf2 \strokec2 artist\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 artist_title\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 INNER\cf9 \strokec9  \cf10 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 top_15_2017\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 ON\cf9 \strokec9  \cf2 \strokec2 artist_title\cf11 \strokec11 .\cf2 \strokec2 reviewid\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf2 \strokec2 top_15_2017\cf11 \strokec11 .\cf2 \strokec2 reviewid\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Output the new view\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 *\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 top_artists_2017\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
- 1option\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Granting and revoking access\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Access control is a key aspect of database management. Not all database users have the same needs and goals, from analysts, clerks, data scientists, to data engineers. As a general rule of thumb, write access should never be the default and only be given when necessary.\cf4 \cb1 \
\cf4 \cb2 In the case of our Pitchfork reviews, we don't want all database users to be able to write into the 
\fs24 \cf4 \cb5 long_reviews
\fs28 \cf4 \cb2  view. Instead, the editor should be the only user able to edit this view.\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Revoke everyone's update and insert privileges\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 REVOKE\cf9 \strokec9  \cf10 \strokec10 UPDATE\cf11 \strokec11 ,\cf9 \strokec9  \cf10 \strokec10 INSERT\cf9 \strokec9  \cf10 \strokec10 ON\cf9 \strokec9  \cf2 \strokec2 long_reviews\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf10 \strokec10 PUBLIC\cf11 \strokec11 ;\cf9 \strokec9  \cb1 \
\
\cf7 \cb8 \strokec7 -- Grant editor update and insert privileges \cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 GRANT\cf9 \strokec9  \cf10 \strokec10 UPDATE\cf11 \strokec11 ,\cf9 \strokec9  \cf10 \strokec10 INSERT\cf9 \strokec9  \cf10 \strokec10 ON\cf9 \strokec9  \cf2 \strokec2 long_reviews\cf9 \strokec9  \cf10 \strokec10 TO\cf9 \strokec9  \cf2 \strokec2 editor\cf11 \strokec11 ;\cf9 \strokec9  \cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Updatable views\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 In a previous exercise, we've used the 
\fs24 \cf4 \cb5 information_schema.views
\fs28 \cf4 \cb2  to get all the views in a database. If you take a closer look at this table, you will notice a column that indicates whether the view is updatable.\cf4 \cb1 \
\cf4 \cb2 Which views are updatable?\
-3 option\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
-1 option\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls9\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Use 
\fs24 \cb5 CREATE OR REPLACE
\fs28 \cb2  to redefine the 
\fs24 \cb5 artist_title
\fs28 \cb2  view.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls9\ilvl0\cf4 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Respecting 
\fs24 \cb5 artist_title
\fs28 \cb2 's original columns of 
\fs24 \cb5 reviewid
\fs28 \cb2 , 
\fs24 \cb5 title
\fs28 \cb2 , and 
\fs24 \cb5 artist
\fs28 \cb2 , add a 
\fs24 \cb5 label
\fs28 \cb2  column from the 
\fs24 \cb5 labels
\fs28 \cb2  table.\cb1 \
\ls9\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Join the 
\fs24 \cb5 labels
\fs28 \cb2  table using the 
\fs24 \cb5 reviewid
\fs28 \cb2  field.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls9\ilvl0
\f1\fs32 \cf7 \cb8 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 -- Redefine the artist_title view to have a label column\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\ls9\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 OR\cf9 \strokec9  \cf13 \cb8 \strokec13 REPLACE\cf9 \cb8 \strokec9  \cf10 \strokec10 VIEW\cf9 \strokec9  \cf2 \strokec2 artist_title\cf9 \strokec9  \cf10 \strokec10 AS\cf9 \cb1 \strokec9 \
\ls9\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 SELECT\cf9 \strokec9  \cf2 \strokec2 reviews\cf11 \strokec11 .\cf2 \strokec2 reviewid\cf11 \strokec11 ,\cf9 \strokec9  \cf2 \strokec2 reviews\cf11 \strokec11 .\cf2 \strokec2 title\cf11 \strokec11 ,\cf9 \strokec9  \cf2 \strokec2 artists\cf11 \strokec11 .\cf2 \strokec2 artist\cf11 \strokec11 ,\cf9 \strokec9  \cf2 \strokec2 labels\cf11 \strokec11 .\cf2 \strokec2 label\cf9 \cb1 \strokec9 \
\ls9\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 reviews\cf9 \cb1 \strokec9 \
\ls9\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 INNER\cf9 \strokec9  \cf10 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 artists\cf9 \cb1 \strokec9 \
\ls9\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 ON\cf9 \strokec9  \cf2 \strokec2 artists\cf11 \strokec11 .\cf2 \strokec2 reviewid\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf2 \strokec2 reviews\cf11 \strokec11 .\cf2 \strokec2 reviewid\cf9 \cb1 \strokec9 \
\ls9\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 INNER\cf9 \strokec9  \cf10 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 labels\cf9 \cb1 \strokec9 \
\ls9\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 ON\cf9 \strokec9  \cf2 \strokec2 labels\cf11 \strokec11 .\cf2 \strokec2 reviewid\cf9 \strokec9  \cf10 \strokec10 =\cf9 \strokec9  \cf2 \strokec2 reviews\cf11 \strokec11 .\cf2 \strokec2 reviewid\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\ls9\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9 \
\ls9\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 *\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 artist_title\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\tx566\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Creating and refreshing a materialized view\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 The syntax for creating materialized and non-materialized views are quite similar because they are both defined by a query. One key difference is that we can refresh materialized views, while no such concept exists for non-materialized views. It's important to know how to refresh a materialized view, otherwise the view will remain a snapshot of the time the view was created.\cf4 \cb1 \
\cf4 \cb2 In this exercise, you will create a materialized view from the table 
\fs24 \cf4 \cb5 genres
\fs28 \cf4 \cb2 . A new record will then be inserted into 
\fs24 \cf4 \cb5 genres
\fs28 \cf4 \cb2 . To make sure the view has the latest data, it will have to be refreshed.\
\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a materialized view called genre_count \cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf2 \strokec2 MATERIALIZED\cf9 \strokec9  \cf10 \strokec10 VIEW\cf9 \strokec9  \cf2 \strokec2 genre_count\cf9 \strokec9  \cf10 \strokec10 AS\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf2 \strokec2 genre\cf11 \strokec11 ,\cf9 \strokec9  \cf13 \strokec13 COUNT\cf11 \strokec11 (\cf10 \strokec10 *\cf11 \strokec11 )\cf9 \strokec9  \cb1 \
\cf10 \cb8 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 genres\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 GROUP\cf9 \strokec9  \cf10 \strokec10 BY\cf9 \strokec9  \cf2 \strokec2 genre\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\
\cf10 \cb8 \strokec10 INSERT\cf9 \strokec9  \cf10 \strokec10 INTO\cf9 \strokec9  \cf2 \strokec2 genres\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 VALUES\cf9 \strokec9  \cf11 \strokec11 (\cf12 \cb8 \strokec12 50000\cf11 \cb8 \strokec11 ,\cf9 \strokec9  \cf12 \cb8 \strokec12 'classical'\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Refresh genre_count\cf9 \cb1 \strokec9 \
\cf2 \cb8 \strokec2 REFRESH\cf9 \strokec9  \cf2 \strokec2 MATERIALIZED\cf9 \strokec9  \cf10 \strokec10 VIEW\cf9 \strokec9  \cf2 \strokec2 genre_count\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 *\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 genre_count\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \'97\'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa105\partightenfactor0

\fs42 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Managing materialized views\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Why do companies use pipeline schedulers, such as Airflow and Luigi, to manage materialized views?\
- 2option\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Create a role\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 A database role is an entity that contains information that define the role's privileges and interact with the client authentication system. Roles allow you to give different people (and often groups of people) that interact with your data different levels of access.\cf4 \cb1 \
\cf4 \cb2 Imagine you founded a startup. You are about to hire a group of data scientists. You also hired someone named Marta who needs to be able to login to your database. You're also about to hire a database administrator. In this exercise, you will create these roles.\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a data scientist role\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 ROLE\cf9 \strokec9  \cf2 \strokec2 data_scientist\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0
\cf4 Create a role called 
\fs24 \cb5 marta
\fs28 \cb2  that has one attribute: the ability to login (
\fs24 \cb5 LOGIN
\fs28 \cb2 ).\
\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a role for Marta\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 ROLE\cf9 \strokec9  \cf2 \strokec2 marta\cf9 \strokec9  \cf10 \strokec10 LOGIN\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
Create a role called 
\fs24 \cb5 admin
\fs28 \cb2  with the ability to create databases (
\fs24 \cb5 CREATEDB
\fs28 \cb2 ) and to create roles (
\fs24 \cb5 CREATEROLE
\fs28 \cb2 ).\
\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create an admin role\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 ROLE\cf9 \strokec9  \cf10 \strokec10 admin\cf9 \strokec9  \cf10 \strokec10 WITH\cf9 \strokec9  \cf2 \strokec2 CREATEDB\cf9 \strokec9  \cf2 \strokec2 CREATEROLE\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 GRANT privileges and ALTER attributes\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Once roles are created, you grant them specific access control privileges on objects, like tables and views. Common privileges being 
\fs24 \cf4 \cb5 SELECT
\fs28 \cf4 \cb2 , 
\fs24 \cf4 \cb5 INSERT
\fs28 \cf4 \cb2 , 
\fs24 \cf4 \cb5 UPDATE
\fs28 \cf4 \cb2 , etc.\cf4 \cb1 \
\cf4 \cb2 Imagine you're a cofounder of that startup and you want all of your data scientists to be able to update and insert data in the 
\fs24 \cf4 \cb5 long_reviews
\fs28 \cf4 \cb2  view. In this exercise, you will enable those soon-to-be-hired data scientists by granting their role (
\fs24 \cf4 \cb5 data_scientist
\fs28 \cf4 \cb2 ) those privileges. Also, you'll give Marta's role a password.\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Grant data_scientist update and insert privileges\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 GRANT\cf9 \strokec9  \cf10 \strokec10 UPDATE\cf11 \strokec11 ,\cf9 \strokec9  \cf10 \strokec10 INSERT\cf9 \strokec9  \cf10 \strokec10 ON\cf9 \strokec9  \cf2 \strokec2 long_reviews\cf9 \strokec9  \cf10 \strokec10 TO\cf9 \strokec9  \cf2 \strokec2 data_scientist\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Give Marta's role a password\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 ALTER\cf9 \strokec9  \cf10 \strokec10 ROLE\cf9 \strokec9  \cf2 \strokec2 marta\cf9 \strokec9  \cf10 \strokec10 WITH\cf9 \strokec9  \cf10 \strokec10 PASSWORD\cf9 \strokec9  \cf12 \cb8 \strokec12 's3cur3p@ssw0rd'\cf11 \cb8 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Add a user role to a group role\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 There are two types of roles: user roles and group roles. By assigning a user role to a group role, a database administrator can add complicated levels of access to their databases with one simple command.\cf4 \cb1 \
\cf4 \cb2 For your startup, your search for data scientist hires is taking longer than expected. Fortunately, it turns out that Marta, your recent hire, has previous data science experience and she's willing to chip in the interim. In this exercise, you'll add Marta's user role to the data scientist group role. You'll then remove her after you complete your hiring process.\cf4 \cb1 \
\pard\pardeftab720\partightenfactor0

\fs32 \AppleTypeServices\AppleTypeServicesF65539 \cf4 \
\pard\pardeftab720\partightenfactor0

\f1 \AppleTypeServices \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Add Marta to the data scientist group\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 GRANT\cf9 \strokec9  \cf2 \strokec2 data_scientist\cf9 \strokec9  \cf10 \strokec10 TO\cf9 \strokec9  \cf2 \strokec2 marta\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Celebrate! You hired data scientists.\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Remove Marta from the data scientist group\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 REVOKE\cf9 \strokec9  \cf2 \strokec2 data_scientist\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 marta\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\'97\'97\
\pard\pardeftab720\sa105\partightenfactor0

\fs42 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Reasons to partition\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 In the video, you saw some very good reasons to use partitioning. However, can you find which one wouldn't be a good reason to use partitioning?\
- 1 option\
\'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Creating vertical partitions\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 In the video, you learned about vertical partitioning and saw an example.\cf4 \cb1 \
\cf4 \cb2 For vertical partitioning, there is no specific syntax in PostgreSQL. You have to create a new table with particular columns and copy the data there. Afterward, you can drop the columns you want in the separate partition. If you need to access the full table, you can do so by using a 
\fs24 \cf4 \cb5 JOIN
\fs28 \cf4 \cb2  clause.\cf4 \cb1 \
\cf4 \cb2 In this exercise and the next one, you'll be working with the example database called 
\fs24 \cf4 \cb5 pagila
\fs28 \cf4 \cb2 . It's a database that is often used to showcase PostgreSQL features. The database contains several tables. We'll be working with the 
\fs24 \cf4 \cb5 film
\fs28 \cf4 \cb2  table. In this exercise, we'll use the following columns:\cf4 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls10\ilvl0
\fs24 \cf4 \cb5 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
film_id
\fs28 \cb2 : the unique identifier of the film\cb1 \
\ls10\ilvl0
\fs24 \cb5 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
long_description
\fs28 \cb2 : a lengthy description of the film\
\ls10\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}
\f1\fs32 \cf7 \cb8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 -- Create a new table called film_descriptions\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\ls10\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 film_descriptions\cf9 \strokec9  \cf11 \strokec11 (\cf9 \cb1 \strokec9 \
\ls10\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf2 \strokec2 film_id\cf9 \strokec9  \cf10 \strokec10 INT\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\ls10\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9     \cf2 \strokec2 long_description\cf9 \strokec9  \cf10 \strokec10 TEXT\cf9 \cb1 \strokec9 \
\ls10\ilvl0\cf11 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 );\cf9 \cb1 \strokec9 \
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9 \
\ls10\ilvl0\cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 -- Copy the descriptions from the film table\cf9 \cb1 \strokec9 \
\ls10\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 INSERT\cf9 \strokec9  \cf10 \strokec10 INTO\cf9 \strokec9  \cf2 \strokec2 film_descriptions\cf9 \cb1 \strokec9 \
\ls10\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 SELECT\cf9 \strokec9  \cf2 \strokec2 film_id\cf11 \strokec11 ,\cf9 \strokec9  \cf2 \strokec2 long_description\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 film\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\tx566\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls11\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Drop the field 
\fs24 \cb5 long_description
\fs28 \cb2  from the 
\fs24 \cb5 film
\fs28 \cb2  table.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls11\ilvl0\cf4 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Join the two resulting tables to view the original table.\
\pard\tx566\pardeftab720\sa160\partightenfactor0
\cf4 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a new table called film_descriptions\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 film_descriptions\cf9 \strokec9  \cf11 \strokec11 (\cf9 \cb1 \strokec9 \
\cb8     \cf2 \strokec2 film_id\cf9 \strokec9  \cf10 \strokec10 INT\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\cb8     \cf2 \strokec2 long_description\cf9 \strokec9  \cf10 \strokec10 TEXT\cf9 \cb1 \strokec9 \
\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Copy the descriptions from the film table\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 INSERT\cf9 \strokec9  \cf10 \strokec10 INTO\cf9 \strokec9  \cf2 \strokec2 film_descriptions\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf2 \strokec2 film_id\cf11 \strokec11 ,\cf9 \strokec9  \cf2 \strokec2 long_description\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 film\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\cb8     \cb1 \
\cf7 \cb8 \strokec7 -- Drop the column in the original table\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 ALTER\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 film\cf9 \strokec9  \cf10 \strokec10 DROP\cf9 \strokec9  \cf10 \strokec10 COLUMN\cf9 \strokec9  \cf2 \strokec2 long_description\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Join to create the original table\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 *\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 film\cf9 \strokec9  \cb1 \
\cf10 \cb8 \strokec10 JOIN\cf9 \strokec9  \cf2 \strokec2 film_descriptions\cf9 \strokec9  \cf10 \strokec10 USING\cf11 \strokec11 (\cf2 \strokec2 film_id\cf11 \strokec11 );\cf9 \cb1 \strokec9 \
\pard\tx566\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\pard\pardeftab720\sa160\partightenfactor0

\fs40 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Creating horizontal partitions\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 In the video, you also learned about horizontal partitioning.\cf4 \cb1 \
\cf4 \cb2 The example of horizontal partitioning showed the syntax necessary to create horizontal partitions in PostgreSQL. If you need a reminder, you can have a look at the slides.\cf4 \cb1 \
\cf4 \cb2 In this exercise, however, you'll be using a list partition instead of a range partition. For list partitions, you form partitions by checking whether the partition key is in a list of values or not.\cf4 \cb1 \
\cf4 \cb2 To do this, we partition by 
\fs24 \cf4 \cb5 LIST
\fs28 \cf4 \cb2  instead of 
\fs24 \cf4 \cb5 RANGE
\fs28 \cf4 \cb2 . When creating the partitions, you should check if the values are 
\fs24 \cf4 \cb5 IN
\fs28 \cf4 \cb2  a list of values.\cf4 \cb1 \
\cf4 \cb2 We'll be using the following columns in this exercise:\cf4 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls12\ilvl0
\fs24 \cf4 \cb5 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
film_id
\fs28 \cb2 : the unique identifier of the film\cb1 \
\ls12\ilvl0
\fs24 \cb5 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
title
\fs28 \cb2 : the title of the film\cb1 \
\ls12\ilvl0
\fs24 \cb5 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
release_year
\fs28 \cb2 : the year it's released\
\ls12\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}
\f1\fs32 \cf7 \cb8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 -- Create a new table called film_partitioned\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\ls12\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 film_partitioned\cf9 \strokec9  \cf11 \strokec11 (\cf9 \cb1 \strokec9 \
\ls12\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9   \cf2 \strokec2 film_id\cf9 \strokec9  \cf10 \strokec10 INT\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\ls12\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9   \cf2 \strokec2 title\cf9 \strokec9  \cf10 \strokec10 TEXT\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\ls12\ilvl0\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9   \cf2 \strokec2 release_year\cf9 \strokec9  \cf10 \strokec10 TEXT\cf9 \cb1 \strokec9 \
\ls12\ilvl0\cf11 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 )\cf9 \cb1 \strokec9 \
\ls12\ilvl0\cf10 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 PARTITION\cf9 \strokec9  \cf10 \strokec10 BY\cf9 \strokec9  \cf10 \strokec10 LIST\cf9 \strokec9  \cf11 \strokec11 (\cf2 \strokec2 release_year\cf11 \strokec11 );\cf9 \cb1 \strokec9 \
\pard\tx566\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\pard\pardeftab720\sa160\partightenfactor0
\cf4 Create three partitions: one for each release year: 
\fs24 \cb5 2017
\fs28 \cb2 , 
\fs24 \cb5 2018
\fs28 \cb2 , and 
\fs24 \cb5 2019
\fs28 \cb2 . Call the partition for 
\fs24 \cb5 2019
\fs28 \cb2  
\fs24 \cb5 film_2019
\fs28 \cb2 , etc.\
\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a new table called film_partitioned\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 film_partitioned\cf9 \strokec9  \cf11 \strokec11 (\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 film_id\cf9 \strokec9  \cf10 \strokec10 INT\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 title\cf9 \strokec9  \cf10 \strokec10 TEXT\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 release_year\cf9 \strokec9  \cf10 \strokec10 TEXT\cf9 \cb1 \strokec9 \
\cf11 \cb8 \strokec11 )\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 PARTITION\cf9 \strokec9  \cf10 \strokec10 BY\cf9 \strokec9  \cf10 \strokec10 LIST\cf9 \strokec9  \cf11 \strokec11 (\cf2 \strokec2 release_year\cf11 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Create the partitions for 2019, 2018, and 2017\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 film_2019\cf9 \cb1 \strokec9 \
\cb8   \cf10 \strokec10 PARTITION\cf9 \strokec9  \cf10 \strokec10 OF\cf9 \strokec9  \cf2 \strokec2 film_partitioned\cf9 \strokec9  \cf10 \strokec10 FOR\cf9 \strokec9  \cf10 \strokec10 VALUES\cf9 \strokec9  \cf10 \strokec10 IN\cf9 \strokec9  \cf11 \strokec11 (\cf12 \cb8 \strokec12 '2019'\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 film_2018\cf9 \cb1 \strokec9 \
\cb8   \cf10 \strokec10 PARTITION\cf9 \strokec9  \cf10 \strokec10 OF\cf9 \strokec9  \cf2 \strokec2 film_partitioned\cf9 \strokec9  \cf10 \strokec10 FOR\cf9 \strokec9  \cf10 \strokec10 VALUES\cf9 \strokec9  \cf10 \strokec10 IN\cf9 \strokec9  \cf11 \strokec11 (\cf12 \cb8 \strokec12 '2018'\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 film_2017\cf9 \cb1 \strokec9 \
\cb8   \cf10 \strokec10 PARTITION\cf9 \strokec9  \cf10 \strokec10 OF\cf9 \strokec9  \cf2 \strokec2 film_partitioned\cf9 \strokec9  \cf10 \strokec10 FOR\cf9 \strokec9  \cf10 \strokec10 VALUES\cf9 \strokec9  \cf10 \strokec10 IN\cf9 \strokec9  \cf11 \strokec11 (\cf12 \cb8 \strokec12 '2017'\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
Occupy the new table, 
\fs24 \cb5 film_partitioned
\fs28 \cb2 , with the three fields required from the 
\fs24 \cb5 film
\fs28 \cb2  table.\
\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf7 \cb8 \outl0\strokewidth0 \strokec7 -- Create a new table called film_partitioned\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 film_partitioned\cf9 \strokec9  \cf11 \strokec11 (\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 film_id\cf9 \strokec9  \cf10 \strokec10 INT\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 title\cf9 \strokec9  \cf10 \strokec10 TEXT\cf9 \strokec9  \cf10 \strokec10 NOT\cf9 \strokec9  \cf10 \strokec10 NULL\cf11 \strokec11 ,\cf9 \cb1 \strokec9 \
\cb8   \cf2 \strokec2 release_year\cf9 \strokec9  \cf10 \strokec10 TEXT\cf9 \cb1 \strokec9 \
\cf11 \cb8 \strokec11 )\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 PARTITION\cf9 \strokec9  \cf10 \strokec10 BY\cf9 \strokec9  \cf10 \strokec10 LIST\cf9 \strokec9  \cf11 \strokec11 (\cf2 \strokec2 release_year\cf11 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Create the partitions for 2019, 2018, and 2017\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 film_2019\cf9 \cb1 \strokec9 \
\cb8   \cf10 \strokec10 PARTITION\cf9 \strokec9  \cf10 \strokec10 OF\cf9 \strokec9  \cf2 \strokec2 film_partitioned\cf9 \strokec9  \cf10 \strokec10 FOR\cf9 \strokec9  \cf10 \strokec10 VALUES\cf9 \strokec9  \cf10 \strokec10 IN\cf9 \strokec9  \cf11 \strokec11 (\cf12 \cb8 \strokec12 '2019'\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 film_2018\cf9 \cb1 \strokec9 \
\cb8   \cf10 \strokec10 PARTITION\cf9 \strokec9  \cf10 \strokec10 OF\cf9 \strokec9  \cf2 \strokec2 film_partitioned\cf9 \strokec9  \cf10 \strokec10 FOR\cf9 \strokec9  \cf10 \strokec10 VALUES\cf9 \strokec9  \cf10 \strokec10 IN\cf9 \strokec9  \cf11 \strokec11 (\cf12 \cb8 \strokec12 '2018'\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf10 \cb8 \strokec10 CREATE\cf9 \strokec9  \cf10 \strokec10 TABLE\cf9 \strokec9  \cf2 \strokec2 film_2017\cf9 \cb1 \strokec9 \
\cb8   \cf10 \strokec10 PARTITION\cf9 \strokec9  \cf10 \strokec10 OF\cf9 \strokec9  \cf2 \strokec2 film_partitioned\cf9 \strokec9  \cf10 \strokec10 FOR\cf9 \strokec9  \cf10 \strokec10 VALUES\cf9 \strokec9  \cf10 \strokec10 IN\cf9 \strokec9  \cf11 \strokec11 (\cf12 \cb8 \strokec12 '2017'\cf11 \cb8 \strokec11 );\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- Insert the data into film_partitioned\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 INSERT\cf9 \strokec9  \cf10 \strokec10 INTO\cf9 \strokec9  \cf2 \strokec2 film_partitioned\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf2 \strokec2 film_id\cf11 \strokec11 ,\cf9 \strokec9  \cf2 \strokec2 title\cf11 \strokec11 ,\cf9 \strokec9  \cf2 \strokec2 release_year\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 film\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\
\cf7 \cb8 \strokec7 -- View film_partitioned\cf9 \cb1 \strokec9 \
\cf10 \cb8 \strokec10 SELECT\cf9 \strokec9  \cf10 \strokec10 *\cf9 \strokec9  \cf10 \strokec10 FROM\cf9 \strokec9  \cf2 \strokec2 film_partitioned\cf11 \strokec11 ;\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sa160\partightenfactor0

\f0\fs28 \cf4 \cb2 \outl0\strokewidth0 \
\pard\pardeftab720\sa105\partightenfactor0

\fs42 \AppleTypeServices\AppleTypeServicesF65539 \cf4 Analyzing a data integration plan\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 You're a data analyst in a hospital that wants to make sure there is enough cough medicine should an epidemic break out. For this, you need to combine the historical health records with the upcoming appointments to see if you can detect a pattern similar to the last cold epidemic. Then, you need to make sure there is sufficient stock available or if the stock should be increased. To help tackle this problem, you created a data integration plan.\cf4 \cb1 \
\cf4 \cb2 Which risk is not clearly indicated on the data integration plan?\
- 3option\
\pard\pardeftab720\sa105\partightenfactor0

\fs42 \AppleTypeServices\AppleTypeServicesF65539 \cf4 SQL versus NoSQL\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \AppleTypeServices \cf4 \cb2 Deciding when to use a SQL versus NoSQL DBMS depends on the kind of information you\'92re storing and the best way to store it. Both types store data, they just store data differently.\cf4 \cb1 \
\cf4 \cb2 When is it better to use a SQL DBMS?\
3 option}